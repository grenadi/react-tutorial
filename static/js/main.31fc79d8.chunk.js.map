{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","handleChange","Event","target","value","setState","submitForm","handleSubmit","state","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"gOAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBACfR,EAAMS,gBAAgBJ,IADxB,wBAJKA,MAUb,OAAO,gCAAQJ,KA2BFS,EAxBD,SAACV,GAAW,IAChBE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCejDE,E,4MA7CXC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAGTM,aAAe,SAACC,GAAW,IAAD,EACEA,EAAMC,OAAtBT,EADc,EACdA,KAAMU,EADQ,EACRA,MAEd,EAAKC,SAAL,eACKX,EAAOU,K,EAIhBE,WAAa,WACT,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKL,e,EAGvBQ,MAAQ,EAAKR,a,4CAEb,WAAU,IAAD,EACiBS,KAAKD,MAAnBd,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHR,MAAOV,EACPmB,SAAUJ,KAAKR,eACnB,uBAAOS,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHR,MAAOT,EACPkB,SAAUJ,KAAKR,eACnB,uBAAOU,KAAK,SAASP,MAAM,SAASR,QAASa,KAAKH,oB,GAxC/CQ,aCkCJC,E,4MA9BbP,MAAQ,CACNQ,WAAY,I,EAGdnB,gBAAkB,SAACJ,GAAW,IACpBuB,EAAe,EAAKR,MAApBQ,WAER,EAAKX,SAAS,CACZW,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBc,aAAe,SAACW,GACd,EAAKb,SAAS,CAAEW,WAAW,GAAD,mBAAM,EAAKR,MAAMQ,YAAjB,CAA6BE,O,4CAGzD,WAAU,IACAF,EAAeP,KAAKD,MAApBQ,WAER,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMU,aAAcE,KAAKF,sB,GAzBfO,aCqBlBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.31fc79d8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() =>\r\n            props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n  return <tBody>{rows}</tBody>\r\n}\r\n\r\nconst Table = (props) => {\r\n  const { characterData, removeCharacter } = props\r\n\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n    </table>\r\n  )\r\n}\r\n\r\n// class Table extends Component {\r\n//   render() {\r\n//     const { characterData } = this.props\r\n\r\n//     return (\r\n//       <table>\r\n//         <TableHeader />\r\n//         <TableBody characterData={characterData} />\r\n//       </table>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\n\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    handleChange = (Event) => {\r\n        const { name, value } = Event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","// import logo from './logo.svg';\n// import './App.css';\n\nimport React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n  state = {\n    characters: [],\n  }\n\n  removeCharacter = (index) => {\n    const { characters } = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n\n  render() {\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// class App extends Component {\n//     render() {\n//         return (\n//             <div className=\"App\">\n//               <h1>Hello, React!</h1>\n//             </div>\n//         )\n//     }\n// }\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}